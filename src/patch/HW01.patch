Index: src/ArrayStorage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ArrayStorage.java	(date 1560264560000)
+++ src/ArrayStorage.java	(date 1560866005000)
@@ -2,29 +2,61 @@
  * Array based storage for Resumes
  */
 public class ArrayStorage {
-    Resume[] storage = new Resume[10000];
+
+    private Resume[] storage = new Resume[10000];
+    private int size = 0;
+
+    public void clear() {
+        for (int i = 0; i < size; i++) {
+            storage[i] = null;
+        }
+        size = 0;
 
-    void clear() {
     }
 
-    void save(Resume r) {
+    public void save(Resume r) {
+        //TODO check if resume present & check storage overflow
+        storage[size] = r;
+        size++;
+
     }
 
-    Resume get(String uuid) {
+    public Resume get(String uuid) {
+        for (int i = 0; i < size; i++) {
+            if (uuid.equals(storage[i].uuid)) {
+                return storage[i];
+            }
+        }
         return null;
+
     }
 
-    void delete(String uuid) {
+    public void delete(String uuid) {
+        // TODO check if resume present
+        for (int i = 0; i < size; i++) {
+            if (uuid.equals(storage[i].uuid)) {
+                storage[i] = storage[size - 1];
+                storage[size - 1] = null;
+                size--;
+            }
+        }
     }
 
     /**
      * @return array, contains only Resumes in storage (without null)
      */
-    Resume[] getAll() {
-        return new Resume[0];
-    }
+
+    public Resume[] getAll() {
+        Resume[] result = new Resume[size];
+        for (int i = 0; i < size; i++) {
+            result[i] = storage[i];
+        }
+        return result;
 
-    int size() {
-        return 0;
     }
-}
+
+    public int size() {
+        return size;
+    }
+
+}
\ No newline at end of file
